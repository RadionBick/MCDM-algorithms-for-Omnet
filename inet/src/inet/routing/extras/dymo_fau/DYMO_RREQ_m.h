//
// Generated file, do not edit! Created by nedtool 4.6 from inet/routing/extras/dymo_fau/DYMO_RREQ.msg.
//

#ifndef _INET__INETMANET_DYMO_RREQ_M_H_
#define _INET__INETMANET_DYMO_RREQ_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif

// cplusplus {{
#include "inet/routing/extras/dymo_fau/DYMO_RM_m.h"
// }}


namespace inet {
namespace inetmanet {

/**
 * Class generated from <tt>inet/routing/extras/dymo_fau/DYMO_RREQ.msg:30</tt> by nedtool.
 * <pre>
 * message DYMO_RREQ extends DYMO_RM
 * {
 * }
 * </pre>
 */
class INET_API DYMO_RREQ : public ::inet::inetmanet::DYMO_RM
{
  protected:

  private:
    void copy(const DYMO_RREQ& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DYMO_RREQ&);

  public:
    DYMO_RREQ(const char *name=NULL, int kind=0);
    DYMO_RREQ(const DYMO_RREQ& other);
    virtual ~DYMO_RREQ();
    DYMO_RREQ& operator=(const DYMO_RREQ& other);
    virtual DYMO_RREQ *dup() const {return new DYMO_RREQ(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, DYMO_RREQ& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, DYMO_RREQ& obj) {obj.parsimUnpack(b);}

} // namespace inetmanet
} // namespace inet

#endif // ifndef _INET__INETMANET_DYMO_RREQ_M_H_

