//
// Generated file, do not edit! Created by nedtool 4.6 from inet/networklayer/contract/NetworkProtocolCommand.msg.
//

#ifndef _INET_NETWORKPROTOCOLCOMMAND_M_H_
#define _INET_NETWORKPROTOCOLCOMMAND_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif


namespace inet {

/**
 * Class generated from <tt>inet/networklayer/contract/NetworkProtocolCommand.msg:22</tt> by nedtool.
 * <pre>
 * message RegisterTransportProtocolCommand
 * {
 *     int protocol;
 * }
 * </pre>
 */
class INET_API RegisterTransportProtocolCommand : public ::cMessage
{
  protected:
    int protocol_var;

  private:
    void copy(const RegisterTransportProtocolCommand& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const RegisterTransportProtocolCommand&);

  public:
    RegisterTransportProtocolCommand(const char *name=NULL, int kind=0);
    RegisterTransportProtocolCommand(const RegisterTransportProtocolCommand& other);
    virtual ~RegisterTransportProtocolCommand();
    RegisterTransportProtocolCommand& operator=(const RegisterTransportProtocolCommand& other);
    virtual RegisterTransportProtocolCommand *dup() const {return new RegisterTransportProtocolCommand(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getProtocol() const;
    virtual void setProtocol(int protocol);
};

inline void doPacking(cCommBuffer *b, RegisterTransportProtocolCommand& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, RegisterTransportProtocolCommand& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef _INET_NETWORKPROTOCOLCOMMAND_M_H_

